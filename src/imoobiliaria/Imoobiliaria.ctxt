#BlueJ class context
comment0.params=
comment0.target=Imoobiliaria()
comment1.params=imoobiliaria
comment1.target=Imoobiliaria(Imoobiliaria)
comment10.params=name
comment10.target=void\ directory(java.lang.String)
comment10.text=\n\ Outros\ m\u00E9todos\n
comment11.params=imoobiliaria
comment11.target=void\ carregarDados(Imoobiliaria)
comment12.params=
comment12.target=Imoobiliaria\ leEstado()
comment13.params=
comment13.target=Imoobiliaria\ initApp()
comment13.text=\n\ Aplicac\u0327a\u0303o\ devera\u0301\ estar\ pre\u0301-populada\ com\ conjunto\ de\ dados\n\ significativos,\ que\ permita\ testar\ toda\ a\ aplicac\u0327a\u0303o\ no\ dia\ da\ entrega\n
comment14.params=u
comment14.target=boolean\ existeUtilizador(Utilizador)
comment14.text=\n\ Verifica\ se\ um\ determinado\ utilizador\ j\u00E1\ existe.\n
comment15.params=u
comment15.target=void\ registarUtilizador(Utilizador)
comment15.text=\n\ Registar\ um\ utilizador,\ quer\ seja\ vendedor,\ quer\ seja\ comprador.\n
comment16.params=email\ password
comment16.target=void\ iniciaSessao(java.lang.String,\ java.lang.String)
comment16.text=\n\ Validar\ o\ acesso\ a\u0300\ aplicac\u0327a\u0303o\ utilizando\ as\ credenciais\ (email\ e\ password)\n
comment17.params=
comment17.target=void\ guardaEstado()
comment17.text=\n\ Guarda\ o\ estado\ atual\ do\ programa\ num\ ficheiro.\n
comment18.params=
comment18.target=void\ fechaSessao()
comment18.text=\n\ Fechar\ a\ sess\u00E3o\ do\ utilizador\ e\ guarda\ o\ estado\ atual\ do\ programa.\n
comment19.params=im
comment19.target=void\ registaImovel(Imovel)
comment19.text=\n\ Colocar\ um\ im\u00F3vel\ \u00E0\ venda;\n
comment2.params=
comment2.target=boolean\ isLogado()
comment20.params=idImovel
comment20.target=boolean\ existeImovel(java.lang.String)
comment20.text=public\ List<Consulta>\ getConsultas()\ throws\ SemAutorizacaoException{\n\n\ \ \ \ \ \ \ if(logado\=\=false){\n\ \ \ \ \ \ \ \ \ \ \ \ \ throw\ new\ SemAutorizacaoException("Precisa\ de\ estar\ logado\ para\ registar\ um\ im\u00F3vel.");\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ else{\n\ \ \ \ \ \ \ \ \ \ \ \ return\ null;\n\ \ \ \ \ \ \ \ \ }\n\ \ \ \ }\ \n\n\ \ \ \ \ /**\n\ Verifica\ se\ um\ determinado\ im\u00F3vel\ j\u00E1\ existe\ a\ partir\ do\ seu\ ID.\n
comment21.params=idImovel\ estado
comment21.target=void\ setEstado(java.lang.String,\ java.lang.String)
comment21.text=\n\ Alterar\ o\ estado\ de\ um\ im\u00F3vel,\ de\ acordo\ com\ as\ ac\u00E7\u00F5es\ feitas\ sobre\ ele\n
comment22.params=n
comment22.target=java.util.Set\ getTopImoveis(int)
comment22.text=\n\ Obter\ um\ conjunto\ com\ os\ c\u00F3digos\ dos\ im\u00F3veis\n\ mais\ consultados\ (ou\ seja,\ com\ mais\ de\ N\ consultas)\n
comment23.params=classe\ preco
comment23.target=java.util.List\ getImovel(java.lang.String,\ int)
comment23.text=\n\ Consultar\ a\ lista\ de\ todos\ os\ imo\u0301veis\ de\ um\ dado\ tipo\ (Terreno,\ Moradia,\ etc.)\ e\ ate\u0301\ um\ certo\ prec\u0327o.\n
comment24.params=preco
comment24.target=java.util.List\ getHabitaveis(int)
comment24.text=\n\ Consultar\ a\ lista\ de\ todos\ os\ imo\u0301veis\ habita\u0301veis\ (ate\u0301\ um\ certo\ prec\u0327o).\n
comment25.params=
comment25.target=java.util.Map\ getMapeamentoImoveis()
comment25.text=\n\ Obter\ um\ mapeamento\ entre\ todos\ os\ imo\u0301veis\ e\ respectivos\ vendedores.\n
comment26.params=
comment26.target=java.util.TreeSet\ getFavoritos()
comment26.text=\n\ Consultar\ imo\u0301veis\ favoritos\ ordenados\ por\ prec\u0327o\n
comment27.params=
comment27.target=Imoobiliaria\ clone()
comment3.params=
comment3.target=Utilizador\ getUserAtual()
comment4.params=
comment4.target=java.util.Map\ getUsers()
comment5.params=
comment5.target=java.util.Map\ getImoveis()
comment6.params=logado
comment6.target=void\ setLogado(boolean)
comment7.params=userAtual
comment7.target=void\ setUserAtual(Utilizador)
comment8.params=nUsers
comment8.target=void\ setUsers(java.util.Map)
comment9.params=nImoveis
comment9.target=void\ setImoveis(java.util.Map)
numComments=28
